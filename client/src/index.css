@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=The+Nautigal:wght@400;700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;



@layer utilities {
  .animate-slide-in-left {
    animation: slideInLeft 0.7s ease-out forwards;
  }
  
  .animate-slide-in-right {
    animation: slideInRight 0.7s ease-out forwards;
  }
  
  .animate-fade-in-up {
    animation: fadeInUp 1s ease-out forwards;
  }
  
  .animate-slide-in-from-left {
    animation: slideInFromLeft 0.8s ease-out forwards;
  }
  
  .animate-slide-in-from-right {
    animation: slideInFromRight 0.8s ease-out forwards;
  }
  
  .animate-pulse-slow {
    animation: pulse 2s ease-in-out infinite;
  }
  
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
  
  .hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  }
}


.nautigal_font {
  font-family: "The Nautigal", cursive;
  font-weight: 400;
  font-style: normal;
}

.bebas_neue {
  font-family: "Bebas Neue", sans-serif;
  font-weight: 400;
  font-style: normal;
}


h1,h2,h3,h4,h5,h6 {
 font-family: "Bebas Neue", sans-serif;
  font-weight: 400;
  font-style: normal;
  letter-spacing: 1.5px;
}

.nav_item {
  font-family: "Bebas Neue", sans-serif;
  font-weight: 400;
  font-style: normal;
  letter-spacing: 1.5px;
  font-size: 16px;
}




@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-1rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(1rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(2rem) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes slideInFromLeft {
  from {
    opacity: 0;
    transform: translateX(-2rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInFromRight {
  from {
    opacity: 0;
    transform: translateX(2rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 45 33% 96%;

  --foreground: 212 45% 32%;

  --border: 212 20% 88%;

  --card: 45 25% 94%;

  --card-foreground: 212 45% 32%;

  --card-border: 212 20% 90%;

  --sidebar: 45 20% 92%;

  --sidebar-foreground: 212 45% 32%;

  --sidebar-border: 212 18% 86%;

  --sidebar-primary: 212 45% 32%;

  --sidebar-primary-foreground: 45 33% 96%;

  --sidebar-accent: 45 30% 88%;

  --sidebar-accent-foreground: 212 45% 32%;

  --sidebar-ring: 42 55% 64%;

  --popover: 45 25% 90%;

  --popover-foreground: 212 45% 32%;

  --popover-border: 212 18% 84%;

  --primary: 212 45% 32%;

  --primary-foreground: 45 33% 96%;

  --secondary: 212 15% 86%;

  --secondary-foreground: 212 45% 32%;

  --muted: 212 10% 88%;

  --muted-foreground: 212 25% 55%;

  --accent: 45 25% 86%;

  --accent-foreground: 212 45% 32%;

  --destructive: 0 84% 35%;

  --destructive-foreground: 0 0% 98%;

  --input: 212 20% 75%;
  --ring: 42 55% 64%;
  --chart-1: 220 85% 15%;
  --chart-2: 45 95% 65%;
  --chart-3: 220 15% 25%;
  --chart-4: 45 60% 45%;
  --chart-5: 220 40% 55%;

  --font-sans: Open Sans, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(220 8% 84% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(220 8% 84% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(220 8% 84% / 0.00), 0px 1px 2px -1px hsl(220 8% 84% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(220 8% 84% / 0.00), 0px 1px 2px -1px hsl(220 8% 84% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(220 8% 84% / 0.00), 0px 2px 4px -1px hsl(220 8% 84% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(220 8% 84% / 0.00), 0px 4px 6px -1px hsl(220 8% 84% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(220 8% 84% / 0.00), 0px 8px 10px -1px hsl(220 8% 84% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 8% 84% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 212 20% 8%;

  --foreground: 45 25% 88%;

  --border: 212 15% 14%;

  --card: 212 15% 10%;

  --card-foreground: 45 25% 88%;

  --card-border: 212 15% 16%;

  --sidebar: 212 12% 12%;

  --sidebar-foreground: 45 25% 88%;

  --sidebar-border: 212 15% 18%;

  --sidebar-primary: 212 45% 32%;

  --sidebar-primary-foreground: 45 33% 96%;

  --sidebar-accent: 212 20% 18%;

  --sidebar-accent-foreground: 45 25% 88%;

  --sidebar-ring: 42 55% 64%;

  --popover: 212 18% 14%;

  --popover-foreground: 45 25% 88%;

  --popover-border: 212 15% 20%;

  --primary: 212 45% 32%;

  --primary-foreground: 45 33% 96%;

  --secondary: 212 15% 18%;

  --secondary-foreground: 45 25% 88%;

  --muted: 212 12% 16%;

  --muted-foreground: 212 15% 65%;

  --accent: 212 15% 14%;

  --accent-foreground: 45 25% 88%;

  --destructive: 0 84% 35%;

  --destructive-foreground: 0 0% 98%;

  /* Used as the border around inputs. Dark mode: Should be a border that is light enough to have high contrast when rendered on a --card background. More contrast than standard --border */
  --input: 212 20% 28%;
  --ring: 42 55% 64%;
  --chart-1: 45 85% 75%;
  --chart-2: 45 95% 65%;
  --chart-3: 220 40% 75%;
  --chart-4: 45 60% 65%;
  --chart-5: 220 50% 75%;

  --shadow-2xs: 0px 2px 0px 0px hsl(220 8% 6% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(220 8% 6% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(220 8% 6% / 0.00), 0px 1px 2px -1px hsl(220 8% 6% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(220 8% 6% / 0.00), 0px 1px 2px -1px hsl(220 8% 6% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(220 8% 6% / 0.00), 0px 2px 4px -1px hsl(220 8% 6% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(220 8% 6% / 0.00), 0px 4px 6px -1px hsl(220 8% 6% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(220 8% 6% / 0.00), 0px 8px 10px -1px hsl(220 8% 6% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 8% 6% / 0.00);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }

  h1, h2, h3, h4, h5, h6 {
    @applyfont-semibold;
    letter-spacing: -0.015em;
    line-height: 1.2;
  }

  h1 {
    @apply font-bold;
    letter-spacing: -0.025em;
  }

  h2 {
    @apply font-semibold;
    letter-spacing: -0.02em;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Custom Animations for About Page Timeline */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes bounceIn {
    0% {
      opacity: 0;
      transform: scale(0.3);
    }
    50% {
      opacity: 1;
      transform: scale(1.05);
    }
    70% {
      transform: scale(0.9);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes drawLine {
    from {
      height: 0;
    }
    to {
      height: 100%;
    }
  }

  @keyframes drawPath {
    from {
      stroke-dasharray: 1000;
      stroke-dashoffset: 1000;
    }
    to {
      stroke-dasharray: 1000;
      stroke-dashoffset: 0;
    }
  }

  @keyframes drawSegment {
    from {
      height: 0;
    }
    to {
      height: 100%;
    }
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out forwards;
    opacity: 0;
  }

  .animate-slide-in-left {
    animation: slideInLeft 0.8s ease-out forwards;
    opacity: 0;
  }

  .animate-slide-in-right {
    animation: slideInRight 0.8s ease-out forwards;
    opacity: 0;
  }

  .animate-bounce-in {
    animation: bounceIn 0.6s ease-out forwards;
    opacity: 0;
  }

  .animate-draw-line {
    animation: drawLine 2s ease-out forwards;
    height: 0;
  }

  .animate-draw-path {
    animation: drawPath 3s ease-out forwards;
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
  }

  .animate-draw-segment {
    animation: drawSegment 0.8s ease-out forwards;
    height: 0;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-300 {
    animation-delay: 0.3s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }

  .animation-delay-500 {
    animation-delay: 0.5s;
  }

  .animation-delay-600 {
    animation-delay: 0.6s;
  }

  .animation-delay-700 {
    animation-delay: 0.7s;
  }

  .animation-delay-800 {
    animation-delay: 0.8s;
  }

  .animation-delay-900 {
    animation-delay: 0.9s;
  }

  .animation-delay-1000 {
    animation-delay: 1s;
  }

  .animation-delay-1100 {
    animation-delay: 1.1s;
  }

  .animation-delay-1200 {
    animation-delay: 1.2s;
  }

  .animation-delay-1500 {
    animation-delay: 1.5s;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-1300 {
    animation-delay: 1.3s;
  }

  .animation-delay-1500 {
    animation-delay: 1.5s;
  }

  .animation-delay-1700 {
    animation-delay: 1.7s;
  }

  /* Responsive adjustments for mobile */
  @media (max-width: 768px) {
    .animate-slide-in-left,
    .animate-slide-in-right {
      animation: fadeInUp 0.8s ease-out forwards;
    }
  }
}

.vertical-timeline::before { background: #d6b771;}